--JOIN
SELECT O.ORDER_ID, C.FNAME,C.CITY, O.ORDER_DATE
FROM ORDERS AS O,CUSTOMER AS C
WHERE O.CUST_ID = C.CUST_ID;

-- INNER JOIN
SELECT O.ORDER_ID, C.FNAME,C.CITY, O.ORDER_DATE
FROM ORDERS AS O
INNER JOIN CUSTOMER AS C ON O.CUST_ID = C.CUST_ID;

-- LEFT OUTER JOIN
SELECT O.ORDER_ID, C.LNAME,C.CITY, O.ORDER_DATE
FROM ORDERS O
LEFT OUTER JOIN CUSTOMER C ON O.CUST_ID = C.CUST_ID;

-- RIGHT OUTER JOIN
SELECT O.ORDER_ID, C.FNAME, C.CITY, O.ORDER_DATE
FROM ORDERS O
RIGHT OUTER JOIN CUSTOMER C ON O.CUST_ID = C.CUST_ID;

-- FULL OUTER JOIN
SELECT O.ORDER_ID, C.FNAME, C.LNAME, O.ORDER_DATE
FROM ORDERS O
FULL OUTER JOIN CUSTOMER C ON O.CUST_ID = C.CUST_ID;

-- Grouped Joins
SELECT O.ORDER_ID, I.ITEM_ID, S.SUPPLIER_NAME,S.CITY
FROM ORDERS AS O
LEFT JOIN (
                ITEM AS I INNER JOIN SUPPLIER AS S ON I.SUPPLIER_ID = S.SUPPLIER_ID
          )
ON O.ITEM_ID = I.ITEM_ID;

--Hash Join
-- Sort Merge Join

-- Join Query Optimizations

EXPLAIN SELECT /*+USE_SORT_MERGE_JOIN*/
O.ORDER_ID, C.FNAME, C.LNAME,C.CITY, O.ORDER_DATE
FROM ORDERS AS O
INNER JOIN CUSTOMER AS C ON O.CUST_ID = C.CUST_ID;

--EXISTS AND NOT EXISTS CLAUSES

SELECT ITEM_ID,ITEM_TYPE,PRICE
FROM ITEM I
WHERE EXISTS(
    SELECT * FROM ORDERS WHERE ORDER_DATE >= to_date('1998-5-7')
    AND ITEM_ID=I.ITEM_ID);

--UPSERT USING SUBQUERIES
UPSERT INTO CUST_BACKUP
SELECT * FROM CUSTOMER WHERE CUST_ID IN (SELECT CUST_ID FROM CUSTOMER);

TODO : Read again


























